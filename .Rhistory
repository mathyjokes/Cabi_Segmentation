# Draw elipses to show the clusters more clearly
fviz_cluster(kclust4, data = cabi, geom = "point",
stand = FALSE, ellipse.type = "norm") +
theme_bw() + scale_y_continuous(labels = scales::comma) +
ggtitle(label='Rider Clusters')
# Draw elipses to show the clusters more clearly
ggsave('rider_clusters.png',
fviz_cluster(kclust4, data = cabi, geom = "point",
stand = FALSE, ellipse.type = "norm") +
theme_bw() + scale_y_continuous(labels = scales::comma) +
ggtitle(label='Rider Clusters')
)
# Draw elipses to show the clusters more clearly
ggsave('rider_clusters.png',
fviz_cluster(kclust4, data = cabi, geom = "point",
stand = FALSE, ellipse.type = "norm") +
theme_bw() + scale_y_continuous(labels = scales::comma) +
ggtitle(label='Rider Clusters')
,height = 7, width= 10)
kclust4$centers %>%
as.data.frame()
cabi <- cabi_data %>%
# Select only the data I want. But this is mostly categorical (aka not helpful for the type of analysis I have to do) so move on
select(duration, start_date, end_date, start_station, end_station, bike_number,member_type) %>%
# get rid of the duplicates and missing values
distinct() %>%
drop_na() %>%
# because my little machine can't handle more, have to subset to a random sample of 100,000 rides
sample_n(100000) %>%
# first, create a dummy variable for members
mutate(member = ifelse(member_type %in% c('Member','member'), 1, 0)) %>%
# then, get only the hour that people started their trip
mutate(start_hour = hour(start_date)) %>%
# finally, I want to know generally where people are coming from. So I'll make a dummy variable for if a user started their journer in DC or not
left_join(., cabi_locations) %>%
mutate(dc = ifelse(!is.na(OWNER), 1, 0)) %>%
select(-c(start_station, end_station, start_date, end_date, bike_number, member_type, OWNER))
cabi_data <- read_csv('full_cabi_data.csv')
library(cluster)
library(factoextra)
library(metricsgraphics)
library(readr)
library(NbClust)
cabi <- read_csv('cabi_sample.csv')
cabi %>%
glimpse()
library(tidyverse)
library(readr)
library(lubridate)
library(fastDummies)
library(janitor)
# Try 3 common methods of choosing the optimum number of clusters
ggsave('kmeans_elbow_method.png',
cabi %>%
sample_n(1000) %>%
fviz_nbclust(., kmeans, method = "wss") +
labs(subtitle = "Elbow method")
,height = 7, width = 10)
ggsave('kmeans_silhouette_method.png',
cabi %>%
sample_n(1000) %>%
fviz_nbclust(., kmeans, method = "silhouette")+
labs(subtitle = "Silhouette method")
,height = 7, width = 10)
# does not converge
cabi %>%
sample_n(1000) %>%
fviz_nbclust(., kmeans, nstart = 25,  method = "gap_stat")+
labs(subtitle = "Gap statistic method")
ggsave('kmeans_gapstat_method.png',
cabi %>%
sample_n(1000) %>%
fviz_nbclust(., kmeans, nstart = 25,  method = "gap_stat")+
labs(subtitle = "Gap statistic method")
,height = 7, width = 10)
# Choosing between 3 or 4
kclust3 <- kmeans(cabi, 3, nstart = 25)
kclust4 <- kmeans(cabi, 4, nstart = 25)
# First three dimensions explain all of the variability in the data
pca <- prcomp(t(cabi), scale. = T, center = T)
ggsave('pca_component_variability.png',
fviz_eig(pca) +
theme_bw() + scale_y_continuous(labels = scales::comma) +
ggtitle(label='Principal Component Analysis')
,height = 7, width= 10)
# Visualize PCA with 3 clusters
cluster.pc3 <- prcomp(cabi, center = FALSE, scale. = FALSE)$x %>% as.data.frame()
cluster.pc3$kmeans.cluster <- factor(kclust3$cluster)
ggsave('pca_3_clusters.png',
ggplot(cluster.pc3,aes(x=PC1,y=PC2,color=kmeans.cluster))+
geom_point() +
theme_bw() + scale_y_continuous(labels = scales::comma) +
ggtitle(label='PCA with 3 cluster K-means')
,height = 7, width = 10)
# Let's visualize PCA with 4 clusters now to see if we see that more natural split
cluster.pc4 <- prcomp(cabi, center = FALSE, scale. = FALSE)$x %>% as.data.frame()
cluster.pc4$kmeans.cluster <- factor(kclust4$cluster)
ggsave('pca_4_clusters.png',
ggplot(cluster.pc4,aes(x=PC1,y=PC2,color=kmeans.cluster))+
geom_point() +
theme_bw() + scale_y_continuous(labels = scales::comma) +
ggtitle(label='PCA with 4 cluster K-means')
, height = 7, width = 10)
# Draw elipses to show the clusters more clearly
ggsave('rider_4_clusters.png',
fviz_cluster(kclust4, data = cabi, geom = "point",
stand = FALSE, ellipse.type = "norm") +
theme_bw() + scale_y_continuous(labels = scales::comma) +
ggtitle(label='4 Rider Clusters')
,height = 7, width= 10)
# Draw elipses to show the clusters more clearly
ggsave('rider_3_clusters.png',
fviz_cluster(kclust3, data = cabi, geom = "point",
stand = FALSE, ellipse.type = "norm") +
theme_bw() + scale_y_continuous(labels = scales::comma) +
ggtitle(label='3 Rider Clusters')
,height = 7, width= 10)
#Customer segmentation through aggeration of results by mean
aggregate(cabi, by = list(kclust4$cluster), mean)
#Customer segmentation through aggeration of results by mean (3 clusters)
aggregate(cabi, by = list(kclust3$cluster), mean)
############### Read in the csvs. NOTE THESE NEXT TWO STEPS TAKE A FEW MINUTES! ###############
cabi_files <- list.files('data/cabi_data_downloaded/', pattern = 'csv')
cabi_files
cabi <- read_csv('cabi_sample.csv')
cabi %>%
glimpse()
ggplot() %>%
geom_point(aes(x = start_hour, y= duration))
ggplot() +
geom_point(aes(x = start_hour, y= duration))
ggplot(cabi) +
geom_point(aes(x = start_hour, y= duration))
ggplot(cabi) +
geom_boxplot(aes(x = start_hour, y= duration))
ggplot(cabi) +
geom_boxplot(aes(x = start_hour, y= duration, group = 1))
ggplot(cabi) +
geom_boxplot(aes(x = start_hour, y= duration, group = start_hour))
cabi %>%
glimpse()
ggplot(cabi) +
geom_point(aes(x = start_hour, y= duration)) +
labs(title = 'Relative duration per relative hour')
cabi_data <- read_csv('data/full_cabi_data.csv')
cabi_locations <- read_csv('data/Capital_Bike_Share_Locations.csv') %>%
rename(start_station = ADDRESS) %>%
select(start_station, OWNER) %>%
distinct()
cabi <- cabi_data %>%
# Select only the data I want. But this is mostly categorical (aka not helpful for the type of analysis I have to do) so move on
select(duration, start_date, end_date, start_station, end_station, bike_number,member_type) %>%
# get rid of the duplicates and missing values
distinct() %>%
drop_na() %>%
# because my little machine can't handle more, have to subset to a random sample of 100,000 rides
sample_n(100000) %>%
# first, create a dummy variable for members
mutate(member = ifelse(member_type %in% c('Member','member'), 1, 0)) %>%
# then, get only the hour that people started their trip
mutate(start_hour = hour(start_date)) %>%
# finally, I want to know generally where people are coming from. So I'll make a dummy variable for if a user started their journer in DC or not
left_join(., cabi_locations) %>%
mutate(dc = ifelse(!is.na(OWNER), 1, 0)) %>%
select(-c(start_station, end_station, start_date, end_date, bike_number, member_type, OWNER))
# Writing out the analysis-ready version because it took a time and a half to process through
write_csv(cabi, 'data/cabi_sample.csv')
cabi <- read_csv('data/cabi_sample.csv')
cabi %>%
glimpse()
ggplot(cabi) +
geom_point(aes(x = start_hour, y= duration)) +
labs(title = 'Duration per Start Hour')
ggplot(cabi) +
geom_point(aes(x = start_hour, y= duration)) +
labs(title = 'Duration per Start Hour') +
theme_bw() +
scale_y_continuous(labels = scales::comma) +
ggplot(cabi) +
geom_point(aes(x = start_hour, y= duration)) +
labs(title = 'Duration per Start Hour') +
theme_bw() +
scale_y_continuous(labels = scales::comma)
ggplot(cabi) +
geom_point(aes(x = start_hour, y= duration)) +
labs(title = 'Duration per Start Hour') +
theme_bw() +
scale_y_continuous(labels = scales::comma)
ggplot(cabi) +
geom_point(aes(x = start_hour, y= duration)) +
labs(title = 'Duration of Trip per Start Hour') +
scale_y_continuous(labels = scales::comma)
ggplot(cabi) +
geom_point(aes(x = start_hour, y= duration)) +
labs(title = 'Duration of Trip per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
ggsave('trip_duration_per_start.png',
ggplot(cabi) +
geom_point(aes(x = start_hour, y= duration)) +
labs(title = 'Duration of Trip per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
,height = 7, width = 10)
ggplot(cabi) +
geom_point(aes(x = member, y= duration)) +
labs(title = 'Duration of Trip per Member Type',
y = 'Duration (in seconds)',
x = 'Member') +
scale_y_continuous(labels = scales::comma)
ggplot(cabi) +
geom_boxplot(aes(x = member, y= duration, group = member)) +
labs(title = 'Duration of Trip per Member Type',
y = 'Duration (in seconds)',
x = 'Member') +
scale_y_continuous(labels = scales::comma)
25000/60
25000/60/60
60*60
cabi %>%
filter(duration < 4000) %>%
ggplot() +
geom_boxplot(aes(x = member, y= duration, group = member)) +
labs(title = 'Duration of Trip per Member Type',
y = 'Duration (in seconds)',
x = 'Member') +
scale_y_continuous(labels = scales::comma)
cabi %>%
filter(duration < 3600) %>%
ggplot() +
geom_boxplot(aes(x = member, y= duration, group = member)) +
labs(title = 'Duration of Trip per Member Type',
y = 'Duration (in seconds)',
x = 'Member') +
scale_y_continuous(labels = scales::comma)
ggsave('short_trip_duration_per_memtype.png',
cabi %>%
filter(duration < 3600) %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
ggplot() +
geom_boxplot(aes(x = member, y= duration, group = member)) +
labs(title = 'Duration of Short Trips per Member Type',
y = 'Duration (in seconds)',
x = 'Member') +
scale_y_continuous(labels = scales::comma)
,height = 7, width = 10)
ggsave('short_trip_duration_per_memtype.png',
cabi %>%
filter(duration < 3600) %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
ggplot() +
geom_boxplot(aes(x = member, y= duration, group = member)) +
labs(title = 'Duration of Short Trips per Member Type',
y = 'Duration (in seconds)',
x = 'Member Type') +
scale_y_continuous(labels = scales::comma)
,height = 7, width = 10)
ggsave('short_trip_duration_per_start_hour.png',
cabi %>%
filter(duration < 3600) %>%
ggplot() +
geom_boxplot(aes(x = start_hour, y= duration, group = start_hour)) +
labs(title = 'Duration of Short Trips per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
,height = 7, width = 10)
ggsave('short_trip_duration_per_start_hour.png',
cabi %>%
filter(duration < 3600) %>%
ggplot() +
geom_point(aes(x = start_hour, y= duration)) +
labs(title = 'Duration of Short Trips per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
,height = 7, width = 10)
#ggsave('short_trip_duration_per_start_hour.png',
cabi %>%
filter(duration < 3600) %>%
ggplot() +
geom_point(aes(x = start_hour, y= duration), alpha = 0.5) +
labs(title = 'Duration of Short Trips per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
#ggsave('short_trip_duration_per_start_hour.png',
cabi %>%
filter(duration < 7200) %>%
ggplot() +
geom_point(aes(x = start_hour, y= duration), alpha = 0.5) +
labs(title = 'Duration of Short Trips per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
60*60*3
#ggsave('short_trip_duration_per_start_hour.png',
cabi %>%
filter(duration < 10800) %>%
ggplot() +
geom_point(aes(x = start_hour, y= duration), alpha = 0.5) +
labs(title = 'Duration of Short Trips per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
#ggsave('short_trip_duration_per_start_hour.png',
cabi %>%
#filter(duration < 10800) %>%
ggplot() +
geom_point(aes(x = start_hour, y= duration), alpha = 0.5) +
labs(title = 'Duration of Short Trips per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
#ggsave('short_trip_duration_per_start_hour.png',
cabi %>%
filter(duration < 25000) %>%
ggplot() +
geom_point(aes(x = start_hour, y= duration), alpha = 0.5) +
labs(title = 'Duration of Short Trips per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
#ggsave('short_trip_duration_per_start_hour.png',
cabi %>%
filter(duration < 25000) %>%
ggplot() +
geom_point(aes(x = start_hour, y= duration), alpha = 0.2) +
labs(title = 'Duration of Short Trips per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
#ggsave('short_trip_duration_per_start_hour.png',
cabi %>%
filter(duration < 20000) %>%
ggplot() +
geom_point(aes(x = start_hour, y= duration), alpha = 0.2) +
labs(title = 'Duration of Short(er) Trips per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
ggsave('trip_duration_per_start.png',
ggplot(cabi) +
geom_point(aes(x = start_hour, y= duration), alpha = 0.2) +
labs(title = 'Duration of Trip per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
,height = 7, width = 10)
ggsave('shorter_trip_duration_per_start_hour.png',
cabi %>%
filter(duration < 20000) %>%
ggplot() +
geom_point(aes(x = start_hour, y= duration), alpha = 0.2) +
labs(title = 'Duration of Short(er) Trips per Start Hour',
y = 'Duration (in seconds)',
x = 'Start Hour') +
scale_y_continuous(labels = scales::comma)
,height = 7, width = 10)
cabi %>%
glimpse()
#ggsave('short_trip_duration_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
ggplot() +
geom_boxplot(aes(x = member, y= start_hour, group = member)) +
labs(title = 'Start Hour by Member Type',
y = 'Start Hour',
x = 'Member Type')
ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
ggplot() +
geom_boxplot(aes(x = member, y= start_hour, group = member)) +
labs(title = 'Start Hour by Member Type',
y = 'Start Hour',
x = 'Member Type')
,height = 7, width = 10)
cabi %>%
glimpse()
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(member == 1, 'In DC', 'Outside DC')) %>%
ggplot() +
geom_tile(aes(x = member, y= start_hour, group = member)) +
labs(title = 'Start Hour by Member Type',
y = 'Start Hour',
x = 'Member Type')
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(member == 1, 'In DC', 'Outside DC')) %>%
ggplot() +
geom_tile(aes(x = member, y= dc)) +
labs(title = 'Start Hour by Member Type',
y = 'Start Hour',
x = 'Member Type')
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(member == 1, 'In DC', 'Outside DC')) %>%
count(member, dc)
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(dc == 1, 'In DC', 'Outside DC')) %>%
count(member, dc)
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(dc == 1, 'In DC', 'Outside DC')) %>%
#count(member, dc)
ggplot() +
geom_tile(aes(x = member, y= dc)) +
labs(title = 'Start Hour by Member Type',
y = 'Start Hour',
x = 'Member Type')
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(dc == 1, 'In DC', 'Outside DC')) %>%
count(member, dc)
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(dc == 1, 'In DC', 'Outside DC')) %>%
count(member, dc) %>%
ggplot() +
geom_tile(aes(x = member, y= dc, fill = n)) +
labs(title = 'Start Hour by Member Type',
y = 'Start Hour',
x = 'Member Type')
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(dc == 1, 'In DC', 'Outside DC')) %>%
count(member, dc) %>%
ggplot() +
geom_tile(aes(x = member, y= dc, fill = rev(n))) +
labs(title = 'Start Location by Member Type',
y = 'Start Location',
x = 'Member Type')
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(dc == 1, 'In DC', 'Outside DC')) %>%
count(member, dc) %>%
ggplot() +
geom_tile(aes(x = member, y= dc, fill = n)) +
labs(title = 'Start Location by Member Type',
y = 'Start Location',
x = 'Member Type',
legend = 'Number of Rides')
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(dc == 1, 'In DC', 'Outside DC')) %>%
count(member, dc) %>%
ggplot() +
geom_tile(aes(x = member, y= dc, fill = n)) +
labs(title = 'Start Location by Member Type',
y = 'Start Location',
x = 'Member Type',
guide = 'Number of Rides')
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(dc == 1, 'In DC', 'Outside DC')) %>%
count(member, dc) %>%
ggplot() +
geom_tile(aes(x = member, y= dc, fill = n)) +
labs(title = 'Start Location by Member Type',
y = 'Start Location',
x = 'Member Type',
labels = 'Number of Rides')
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(dc == 1, 'In DC', 'Outside DC')) %>%
count(member, dc) %>%
ggplot() +
geom_tile(aes(x = member, y= dc, fill = n)) +
labs(title = 'Start Location by Member Type',
y = 'Start Location',
x = 'Member Type',
label = 'Number of Rides')
#ggsave('start_hour_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(dc == 1, 'In DC', 'Outside DC')) %>%
count(member, dc) %>%
ggplot() +
geom_tile(aes(x = member, y= dc, fill = n)) +
labs(title = 'Start Location by Member Type',
y = 'Start Location',
x = 'Member Type',
fill = 'Number of Rides')
ggsave('start_location_per_memtype.png',
cabi %>%
mutate(member = ifelse(member == 1, 'Member', 'Casual Rider')) %>%
mutate(dc = ifelse(dc == 1, 'In DC', 'Outside DC')) %>%
count(member, dc) %>%
ggplot() +
geom_tile(aes(x = member, y= dc, fill = n)) +
labs(title = 'Start Location by Member Type',
y = 'Start Location',
x = 'Member Type',
fill = 'Number of Rides')
,height = 7, width = 10)
